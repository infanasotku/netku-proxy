name: Deploy to Staging
on:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: read

jobs:
  load-pr:
    name: Load PR data
    uses: ./.github/workflows/load-pr-data.yml

  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: load-pr
    environment: staging-deploy
    if: |
      contains(fromJson(needs.load-pr.outputs.pr_data).labels.*.name, 'events') ||
      contains(fromJson(needs.load-pr.outputs.pr_data).labels.*.name, 'api') ||
      contains(fromJson(needs.load-pr.outputs.pr_data).labels.*.name, 'outbox')

    steps:
      - uses: actions/checkout@v4

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ vars.REGISTRY_URL }}/netku/netku-proxy:${{ github.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-and-push, load-pr]
    environment: staging-deploy

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
      - name: Deploy via SSH
        run: |
          ssh -p ${{ secrets.SSH_PORT }} root@${{ secrets.SERVER_IP }} << 'EOF'
            cd ${{ secrets.PROJECT_DIR }}
            git pull

            sops -d k8s/encoded-secrets.yaml > k8s/temp-secrets.yaml && \
            helm upgrade --install netku-proxy-staging -f k8s/values-staging.yaml \
            --set container.tag=${{ github.sha }} --namespace netku-staging k8s \
            && rm k8s/temp-secrets.yaml
          EOF
